[build-system]
requires = ["maturin>=1.6,<2.0"]
build-backend = "maturin"

[project]
name = "laboneq"
dynamic = ["version"] # Version is fetched from workspace Cargo.toml
description = "Zurich Instruments LabOne Q software framework for quantum computing control"
license = { text = "Apache 2.0" }
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Zurich Instruments Development Team", email = "info@zhinst.com" },
]
keywords = ["quantum", "sdk", "zhinst"]
classifiers = [
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "attrs >= 24.3.0",
  "cattrs >= 25.1.0",
  "cycler >= 0.12.1",
  "engineering_notation >= 0.10.0",
  "flask >= 3.0.2",
  "jsonschema >= 4.21.1",
  "matplotlib >= 3.8.3",
  "multimethod >= 2.0",
  "networkx >= 3.4.2",
  "numpy >= 1.26",
  "openpulse ~= 1.0.1",
  "openqasm3 ~= 1.0.0",
  "orjson >= 3.9.15",
  "pybase64 >= 1.3.2",
  "pycparser >= 2.21",
  "pygments >= 2.18.0",
  "python-box >= 7.1.1",
  "pyyaml >= 6.0.1",
  "requests >= 2.31.0",
  "rich >= 13.7.1",
  "scipy >= 1.12.0",
  "sortedcollections >= 2.1.0",
  "sortedcontainers >= 2.4.0",
  "sqlitedict >= 2.1.0",
  "typing_extensions >= 4.10.0",
  "zhinst-comms >= 3.1",
  "zhinst-comms-schemas==0.0.1",
  "zhinst-core~=25.7.0",
  "zhinst-timing-models~=25.7.0",
  "zhinst-toolkit ==1.1.0",
  "zhinst-utils ==0.7.0",
]

[project.optional-dependencies]
xarray = ["xarray >= 2024"]

[project.urls]
Homepage = "https://github.com/zhinst/laboneq"

[dependency-groups]
dev = [
  "flaky == 3.8.1",
  "freezegun >= 1.5.1",
  "intervaltree >= 3.1.0",
  "ipykernel >= 6.29.5",
  "ipython >= 8.18.1",
  "jsonschema >= 4.23.0",
  "jupyter >= 1.1.1",
  "lmfit >= 1.3.0",
  "nbconvert >= 7.16.6",
  "nbmake >= 1.5.5",
  "opentelemetry-api >= 1.29.0",
  "opentelemetry-sdk >= 1.29.0",
  "opentelemetry-instrumentation >= 0.51b0",
  "wrapt >= 1.16.0",
  "parse >= 1.20.2",
  "plotly >= 6.0",
  "pydeps >= 3.0.0",
  "pytest >= 8.3.4",
  "pytest-assume >= 2.4.3",
  "pytest-asyncio >= 0.25.3",
  "pytest-benchmark == 5.1.0",
  "pytest-cov >= 6.0.0",
  "pytest-httpserver >= 1.1.1",
  "pytest-mock >= 3.14.0",
  "pytest-xdist >= 3.6.1",
  "pyvisa-py ==0.7.2",
  "qiskit >= 1.3.2",
  "qiskit-experiments >= 0.8.1",
  "requests >= 2.32.3",
  "RsInstrument >= 1.90.0",
  "rustworkx >= 0.16.0",
  "scikit-learn >= 1.5.2",
  "uncertainties >= 3.2.2",
]
tools = [
  "rust-just >= 1.40",
  "maturin >= 1.6, < 2.0",
  "mypy >=1.18.1, <1.19",
  "types-PyYAML >= 6.0.12",
  "mypy-gitlab-code-quality >= 1.3.0",
  "pip >= 25.0.1",                     # used by PyCharm for scanning the venv
  "pre-commit >= 4.1.0",
  "ruff ==0.13.1",
  "taplo >= 0.9.3",
]

[tool.uv]
default-groups = ["dev", "tools"]
cache-keys = [
  { file = "pyproject.toml" },
  { file = "src/rust/**/Cargo.toml" },
  { file = "src/rust/**/*.rs" },
]

[tool.uv.sources]

[tool.maturin]
manifest-path = "./src/rust/laboneq-rust/Cargo.toml"
module-name = "laboneq._rust"
features = ["pyo3/extension-module"]
python-source = "src/python"
include = [
  # **/ prefix is used to work around a bug that causes include pattern
  # to be treated differently for sdist builds. https://github.com/PyO3/maturin/issues/2320
  "**/laboneq/compiler/qccs-schema_2_5_0.json",
  "**/laboneq/pulse_sheet_viewer/pulse_sheet_viewer_template.html",
]

python-packages = ["laboneq"]
compatibility = "manylinux2014"

[tool.ruff]
line-length = 88
exclude = [
  ".cargo",
  ".eggs",
  ".git",
  ".ruff_cache",
  ".tox",
  ".venv",
  "_build",
  "build",
  "dist",
  "target",
  "venv",
]

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "PERF", # perflint
  "F",    # pyflakes
  "E",    # pycodestyle
  "W",    # flake8-2020
  "YTT",
  "Q",    # flake8-quotes
  "B019",
  "I002", # isort
  "FA",   # future annotations
]

ignore = [
  "E501",
  "F405",
  "E741",
  "E722",
  "E402",
  "E731", # Do not assign a lambda expression, use a def
  "B905", # Complains about all 180+ uses of zip() when targeting Python 3.10+.
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

mccabe.max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# F401: Imported but unused
"__init__.py" = ["F401"]
"*/laboneq/simple.py" = ["F401"]

# Documentation notebooks (nbqa converts notebooks to .py)
"examples/**/*.ipynb" = [
  # Allow redefining values
  "F811",
  # Useless attribute access can display values in notebooks
  "B018",
]

# Ignore star import, mainly from laboneq.simple (TODO: Fix this)
"tests/integration/dsl_v3/*" = ["F403", "F405"]

"tests/*" = ["B008", "B011", "B017", "B904", "PERF"]
"resources/examples/*" = ["B015", "PERF"]
"examples/*" = ["PERF"]
"*.ipynb" = [
  "F403", # Notebooks utilize `from laboneq.simple import *`
]

[tool.ruff.format]
docstring-code-format = true

[[tool.mypy.overrides]]
module = [
  "scipy.*",
  "sortedcollections",
  "sortedcontainers",
  "intervaltree",
  "pybase64",
  "engineering_notation",
  "jsonschema.*",
  "pycparser.*",
  "sqlitedict",
  "openpulse",
  "cycler",
]
ignore_missing_imports = true
